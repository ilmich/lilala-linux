#!/bin/sh

# Slackware build script for kernel-rpi

# Copyright 2018 Michele Zuccal√† < ardutu at gmail dot com >
# All rights reserved
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

if [ $UID != "0" ]; then
    echo "You must be logged as root!!!"
    exit 1
fi

PRGNAM=kernel-rpi
CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-$PWD}

if [ ! -e $CWD/$PRGNAM.info ]; then
    echo "File $PRGNAM.info not found"
    exit 1
fi

. $CWD/$PRGNAM.info

STRIP_CMD=strip
if [ ! -z "$SLK_TARGET" ]; then
    TARGET=" --target=$SLK_TARGET "
    ARCH=` echo $SLK_TARGET | cut -d - -f 1 -`
    STRIP_CMD=$SLK_TARGET-strip
fi

if [ ! -z "$SLK_SYSROOT" ]; then
    SYSROOT=" --sysroot=$SLK_SYSROOT "
fi


case $ARCH in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
    x86_64) ;; 
    *) ARCH=$( uname -m ) ;;
esac

if [ -z "$SLK_CFLAGS" ]; then
	if [ "$ARCH" = "i486" ]; then
	  SLK_CFLAGS="-O2 -march=i486 -mtune=i686"
	elif [ "$ARCH" = "i686" ]; then
	  SLK_CFLAGS="-O2 -march=i686 -mtune=i686"
	elif [ "$ARCH" = "x86_64" ]; then
	  SLK_CFLAGS="-O2 -fPIC"
	else
	  SLK_CFLAGS="-O2"
	fi
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf firmware-*
tar xvf $CWD/$SOURCE_TAR
cd firmware-*
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

SLK_BOARD=${SLK_BOARD:-rpi}

case $SLK_BOARD in
    rpi) KVER="" ; KMODVER="+" ; DTB="bcm2708*.dtb" ; BLOB="bootcode.bin start.elf fixup.dat";;
    rpi2) KVER="7" ; KMODVER="-v7+" ; DTB="bcm27*rpi-2*.dtb" ; BLOB="bootcode.bin start.elf fixup.dat";;
    rpi3) KVER="7" ; KMODVER="-v7+" ; DTB="bcm2710*3*.dtb" ; BLOB="bootcode.bin start.elf fixup.dat";;
    rpi4) KVER="7l" ; KMODVER="-v7l+" ; DTB="bcm2711*.dtb" ; BLOB="start4.elf fixup4.dat";;
    *) KVER="" ; KMODVER="+" ;;
esac

# pack blobs
mkdir -p $PKG/boot
(
	cd boot
	cp -r overlays $PKG/boot
	cp {COPYING.linux,LICENCE.broadcom} $PKG/boot
	cp $DTB $PKG/boot
	cp kernel$KVER.img $PKG/boot
	cp $BLOB $PKG/boot
)

mkdir -p $PKG/lib/modules
cp -r modules/$VERSION$KMODVER $PKG/lib/modules

# compress modules
echo compressing modules
find $PKG/lib -name *.ko -exec gzip -v {} \;
/sbin/depmod -b $PKG $VERSION$KMODVER

#install configs
cp $CWD/config.txt $PKG/boot
cp $CWD/cmdline.txt $PKG/boot

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -r documentation $PKG/usr/doc/$PRGNAM-$VERSION

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

#generate slack-required
if [ ! -z "$DEPS" ]; then
    for i in $DEPS;
    do
	echo $i >> $PKG/install/slack-required
    done
fi

cd $PKG
mkdir -p $OUTPUT

if [ -z $SLK_ARCH ]; then
    makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
else
    makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$SLK_ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $PKG
fi
