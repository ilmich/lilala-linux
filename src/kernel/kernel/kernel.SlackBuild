#!/bin/sh

# Slackware build script for kernel

# Copyright 2020 Michele Zuccal√† < ardutu at gmail dot com >
# All rights reserved
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

if [ $UID != "0" ]; then
    echo "You must be logged as root!!!"
    exit 1
fi

PRGNAM=kernel
CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-$PWD}
ARCH=${ARCH:-`uname -m`}

if [ ! -e $CWD/$PRGNAM.info ]; then
    echo "File $PRGNAM.info not found"
    exit 1
fi

. $CWD/$PRGNAM.info

STRIP_CMD=strip
if [ ! -z "$SLK_TARGET" ]; then
    TARGET=" --host=$SLK_TARGET "
    STRIP_CMD=$SLK_TARGET-strip
fi

if [ ! -z "$SLK_SYSROOT" ]; then
    SYSROOT=" --sysroot=$SLK_SYSROOT "
fi

case $ARCH in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
    x86_64) ;;
    *) ARCH=$( uname -m ) ;;
esac

if [ -z "$SLK_CFLAGS" ]; then
	if [ "$ARCH" = "i486" ]; then
	  SLK_CFLAGS="-O2 -march=i486 -mtune=i686"
	elif [ "$ARCH" = "i686" ]; then
	  SLK_CFLAGS="-O2 -march=i686 -mtune=i686"
	elif [ "$ARCH" = "x86_64" ]; then
	  SLK_CFLAGS="-O2 -fPIC"
	else
	  SLK_CFLAGS="-O2"
	fi
fi

set -e

SOURCE_TAR=${SOURCE_TAR:-`basename $DOWNLOAD_URL`}
if [ ! -e ${CWD}/$SOURCE_TAR ]; then
  wget -c $DOWNLOAD_URL -O $SOURCE_TAR
fi

if [ ! $DOWNLOAD_SHA1 == `sha1sum $SOURCE_TAR | cut -d " " -f 1` ]; then
    echo "SHA1 did not match"
    exit 1
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$SOURCE_TAR
cd $SRCNAM
chown -R root:root .
#find -L . \
# \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
#  -o -perm 511 \) -exec chmod 755 {} \; -o \
# \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
#  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

#apply patches
for i in `find $CWD/patches/ -name *.patch | sort -`; do
    patch -p1 < $i
done

if [ ! -e $CWD/kernel_${SLK_BOARD}_config ]; then
    echo "config for kernel $SLK_BOARD not found!!"
    exit 1
fi

cp $CWD/kernel_${SLK_BOARD}_config .config
make -j3 ARCH=$ARCH CROSS_COMPILE=$SLK_TARGET- oldconfig
make -j3 ARCH=$ARCH CROSS_COMPILE=$SLK_TARGET-
make -j3 ARCH=$ARCH CROSS_COMPILE=$SLK_TARGET- INSTALL_MOD_PATH=$PKG/ modules_install

mkdir -p $PKG/boot/overlays

cp arch/$ARCH/boot/zImage $PKG/boot/vmlinuz-$VERSION
if [ -e arch/$ARCH/boot/dts ]; then
    cp arch/$ARCH/boot/dts/*.dtb $PKG/boot/
fi
if [ -e arch/$ARCH/boot/dts/overlays ]; then
    cp arch/$ARCH/boot/dts/overlays/*.dtb* $PKG/boot/overlays/
fi

mkdir -p $PKG/install
#cat $CWD/doinst.sh > $PKG/install/doinst.sh
cat $CWD/slack-desc > $PKG/install/slack-desc

#generate slack-required
if [ ! -z "$DEPS" ]; then
    for i in $DEPS;
    do
	echo $i >> $PKG/install/slack-required
    done
fi

cd $PKG
mkdir -p $OUTPUT

if [ -z $SLK_ARCH ]; then
    makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
else
    makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$SLK_ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
fi

# Clean up the extra stuff:
if [ "$1" = "--cleanup" ]; then
  rm -rf $PKG
fi
