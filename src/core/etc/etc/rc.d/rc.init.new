#!/bin/sh
# This file is executed on boot to initialize the system

HOSTNAME="$(cat /etc/HOSTNAME)"

on_boot() {
    #===================
    # mount the API filesystem
    # /proc, /sys, /run, /dev, /run/lock, /dev/pts, /dev/shm
    echo_color 2 "mounting filesystem..."
    /bin/mountpoint -q /proc    || /bin/mount -t proc proc /proc -o nosuid,noexec,nodev
    /bin/mountpoint -q /sys     || /bin/mount -t sysfs sys /sys -o nosuid,noexec,nodev
    /bin/mountpoint -q /run     || /bin/mount -t tmpfs run /run -o mode=0755,nosuid,nodev
    /bin/mountpoint -q /dev     || /bin/mount -t devtmpfs dev /dev -o mode=0755,nosuid
    /bin/mkdir -p /dev/pts /dev/shm
    /bin/mountpoint -q /dev/pts || /bin/mount -t devpts devpts /dev/pts -o mode=0620,gid=5,nosuid,noexec
    /bin/mountpoint -q /dev/shm || /bin/mount -t tmpfs shm /dev/shm -o mode=1777,nosuid,nodev

    echo_color 2 "checking filesystems..."
    /sbin/fsck -ATa
    if [ $? -eq 2 ]; then
       echo_color 2 "filesystem errors fixed but system should be rebooted"
       sleep 2
       /sbin/halt -r
    fi
    if [ $? -gt 2 ]; then
       echo_color 2 "filesystem errors exist, press enter to fix manually"
       read
       /bin/sh
       /sbin/halt -r
    fi

    echo_color 2 "remounting root read/write..."
    /bin/mount -o remount,rw /
    
    #===================
    # initialize system
    echo_color 2 "setting up loopback device..."
    /bin/ifconfig lo 127.0.0.1
    
    echo_color 2 "start syslogd..."
    /sbin/syslogd

    #load fake clock if present
    if [ -x /sbin/fake-hwclock ]; then
	echo_color 2 "loading hardware clock..."
	/sbin/fake-hwclock load
    fi

    echo_color 2 "initializing smdev..."
    echo /bin/smdev > /proc/sys/kernel/hotplug
    /bin/smdev -s

    # Determine the version of the running kernel:
    RELEASE=$(uname -r)    
    # Update kernel module dependencies:
    if [ -e "/lib/modules/$RELEASE/modules.dep" ]; then 
	echo_color 2 "Updating module dependency list for $RELEASE:  /sbin/depmod --quick"
	/sbin/depmod --quick
    else 
	echo_color 2 "Creating module dependency list for $RELEASE:  /sbin/depmod --all"
	/sbin/depmod --all
    fi

    echo_color 2 "loading modules..."
    MODULE=`find /sys -name modalias | xargs cat | sort -u`
    for i in $MODULE; do
	/sbin/modprobe $i >/dev/null 2>/dev/null
    done

    if [ -x "/etc/rc.d/rc.modules" ]; then
	/etc/rc.d/rc.modules
    fi

    echo_color 2 "setting random seed..."
    [ -f /etc/random-seed ] && /bin/cat /etc/random-seed >/dev/urandom
    /bin/dd if=/dev/urandom of=/etc/random-seed count=1 bs=512 2>/dev/null

    if [ -x /usr/sbin/haveged ]; then
	echo_color 2 "generate random numbers"
	/usr/sbin/haveged -v 1
    fi

    echo_color 2 "setting hostname..."
    echo "$HOSTNAME" >| /proc/sys/kernel/hostname

    echo_color 2 "mounting..."
    /bin/mount -a

    #===================
    # load /etc/rc.d/rc.network
    if [ -x /etc/rc.d/rc.network ]; then
        echo_color 2 "loading /etc/init.d/rc.network..."
        /etc/rc.d/rc.network
    fi

    echo_color 2 "start all services..."
    /sbin/svc -s

    if [ -e "/etc/keymap" ]; then
        echo_color 2 "load keyboard..."
        loadkeys `cat /etc/keymap`
    fi

    #===================
    # load /etc/rc.d/rc.local
    if [ -x /etc/rc.d/rc.local ]; then
        echo_color 2 "loading /etc/rc.d/rc.local..."
        /etc/rc.d/rc.local
    fi

    /bin/dmesg > /var/log/dmesg

    echo_color 2 ""
    echo_color 2 "Welcome to"
    echo_color 2 ""
    echo_color 2 " ____      __  __            __            "
    echo_color 2 "|    |    |__||  |  _____   |  |  _____    "
    echo_color 2 "|    |    |  ||  |  \__  \  |  |  \__  \   "
    echo_color 2 "|    |___ |  ||  |__ / __ \_|  |__ / __ \_ "
    echo_color 2 "|_______ \|__||____/(____  /|____/(____  / "
    echo_color 2 "        \/               \/       Linux\/  "

    /bin/respawn -d 2 /sbin/getty /dev/tty1

}

on_shutdown() {

    #===================
    # load /etc/init.d/rc.local_shutdown
    if [ -x /etc/rc.d/rc.local_shutdown ]; then
        echo_color 2 "loading /etc/rc.d/rc.local_shutdown..."
        /etc/rc.d/rc.local_shutdown
    fi

    echo_color 2 "stopping services..."
    /sbin/svc -k

    #save fake clock if present    
    if [ -x /sbin/fake-hwclock ]; then
	echo_color 2 "saving hardware clock..."
	/sbin/fake-hwclock save
    fi

    echo_color 2 "remounting root filesystem read-only"
    /bin/mount -o remount.ro /

    /bin/sync
}

echo_color() {
  color="$1"
  shift
  printf "\033[1;3%sm%s\033[00m\n" "$color" "$*"
}


#===================
# handle arguments
case "$1" in
init)
    on_boot;;
shutdown)
    on_shutdown
    echo_color 2 "poweroff system..."
    /sbin/halt -p
    ;;
reboot)
    on_shutdown
    echo_color 2 "reboot system..."
    /sbin/halt -r
    ;;
*)
    echo "This is an init script! Don't run as normal program"
esac
