#!/bin/sh
# This is a script to initialize udev, which populates the /dev
# directory with device nodes, scans for devices, loads the
# appropriate kernel modules, and configures the devices.

PATH="/sbin:/bin"

case "$1" in
    start)
	# Disable hotplug helper since udevd listens to netlink:
	if [ -e /proc/sys/kernel/hotplug ]; then
	  echo "" > /proc/sys/kernel/hotplug
	fi
	
	echo "Creating static nodes in /dev."
	kmod static-nodes -f tmpfiles --output /run/static-nodes
	grep "^d\ " /run/static-nodes | while read line ; do
	  mkdir -p -m $(echo $line | cut -f 3 -d ' ') $(echo $line | cut -f 2 -d ' ')
	done

        grep -v "^d\ " /run/static-nodes | while read line ; do
	  mknod -m $(echo $line | cut -f 3 -d ' ') \
	  $(echo $line | cut -f 2 -d ' ') \
	  $(echo $line | cut -b1 ) \
	  $(echo $line | cut -f 7 -d ' ' | cut -f 1 -d :) \
	  $(echo $line | cut -f 7 -d ' ' | cut -f 2 -d :) 2> /dev/null
	done

	rm -f /run/static-nodes
	# Add any system defined additional device nodes:
	cp --preserve=all --recursive --update /lib/udev/devices/* /dev 2> /dev/null
	# Add any locally defined additional device nodes:
	cp --preserve=all --recursive --update /etc/udev/devices/* /dev 2> /dev/null
	echo "Starting udevd:  /sbin/udevd --daemon"
	/sbin/udevd --daemon
	# Since udev is just now being started we want to use add events:
	echo "Triggering udev events:  /sbin/udevadm trigger --action=add"
	# Call udevtrigger and udevsettle to do the device configuration:
	/sbin/udevadm trigger --type=subsystems --action=add
	/sbin/udevadm trigger --type=devices --action=add
	/sbin/udevadm settle --timeout=120
        ;;
    stop)
	echo "Stopping udevd is STRONGLY discouraged and not supported."
	echo "If you are sure you want to do this, use 'force-stop' instead."
	;;
    force-stop)
	echo "Stopping udevd"
	udevadm control --exit
	killall udevd 2>/dev/null
	;;
    restart)
	echo "Restarting udevd is STRONGLY discouraged and not supported."
	echo "If you are sure you want to do this, use 'force-restart' instead."
	;;
    force-restart)
	echo "Restarting udevd"
	udevadm control --exit
	sleep 3
	udevd --daemon
	;;
    reload)
	echo "Reloading udev rules"
	udevadm control --reload
	;;
    force-reload)
	echo "Updating all available device nodes in /dev"
	udevadm control --reload
	rm -rf /dev/.udev /dev/disk
	cp --preserve=all --recursive --update /lib/udev/devices/* /dev 2> /dev/null
	;;
	
    *)
	echo "Usage: $0 {start|stop|restart|reload|force-reload}"
	exit 1
	;;
esac
